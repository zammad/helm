useElasticsearch: true
useMemcached: true
usePostgresql: true

image:
  repository: zammad/zammad-docker-compose
  tag: 2.8.0-26
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    ingress.kubernetes.io/proxy-body-size: 50m
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: zammad-tls
  #    hosts:
  #      - chart-example.local

# zammad containers can be configured by env vars
env:
  ELASTICSEARCH_HOST: zammad-elasticsearch-client
  ELASTICSEARCH_PORT: 9200
  MEMCACHED_HOST: zammad-memcached
  MEMCACHED_PORT: 11211
  POSTGRESQL_HOST: zammad-postgresql
  POSTGRESQL_PORT: 5432
  POSTGRESQL_USER: zammad
  POSTGRESQL_PASS: zammad
  POSTGRESQL_DB: zammad_production
  POSTGRESQL_DB_CREATE: false
  ZAMMAD_RAILSSERVER_HOST: zammad-railsserver
  ZAMMAD_RAILSSERVER_PORT: 3000
  ZAMMAD_WEBSOCKET_HOST: zammad-websocket
  ZAMMAD_WEBSOCKET_PORT: 6042

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## Zammad data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 15Gi

# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources:
  nginx: {}
    # requests:
    #   cpu: 50m
    #   memory: 32Mi
    # limits:
    #   cpu: 100m
    #   memory: 64Mi
  railsserver: {}
    # requests:
    #   cpu: 100m
    #   memory: 512Mi
    # limits:
    #   cpu: 200m
    #   memory: 1024Mi
  scheduler: {}
    # requests:
    #   cpu: 100m
    #   memory: 256Mi
    # limits:
    #   cpu: 200m
    #   memory: 512Mi
  websocket: {}
    # requests:
    #   cpu: 100m
    #   memory: 256Mi
    # limits:
    #   cpu: 200m
    #   memory: 512Mi

nodeSelector: {}

tolerations: []

affinity: {}


elasticsearch:
  image:
    repository: "zammad/zammad-docker-compose"
    tag: "zammad-elasticsearch-2.8.0-26"
  cluster:
    xpackEnable: false
    # See README for proper configuration
    env:
      EXPECTED_MASTER_NODES: "1"
      MINIMUM_MASTER_NODES: "1"
      RECOVER_AFTER_MASTER_NODES: "1"
      XPACK_MONITORING_ENABLED: false
  client:
    replicas: 1
    # resources:
    #   requests:
    #     cpu: "25m"
    #     memory: "512Mi"
    #   limits:
    #     cpu: "300m"
    #     memory: "1024Mi"
  data:
    terminationGracePeriodSeconds: 60
    replicas: 1
    # resources:
    #   requests:
    #     cpu: "175m"
    #     memory: "1536Mi"
    #   limits:
    #     cpu: "350m"
    #     memory: "2048Mi"
  master:
    replicas: 1
    # resources:
    #   requests:
    #     cpu: "25m"
    #     memory: "512Mi"
    #   limits:
    #     cpu: "300m"
    #     memory: "1024Mi"


memcached:
  replicaCount: 1
  # resources:
  #   requests:
  #     cpu: 50m
  #     memory: 64Mi
  #   limits:
  #     cpu: 100m
  #     memory: 128Mi


postgresql:
  postgresqlUsername: zammad
  postgresqlPassword: zammad
  postgresqlDatabase: zammad_production
  # resources:
  #   requests:
  #     cpu: 250m
  #     memory: 256Mi
  #   limits:
  #     cpu: 500m
  #     memory: 512Mi
